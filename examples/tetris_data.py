import torch


def tetris() -> tuple[torch.Tensor, torch.Tensor]:
    # pos = [
    #     [(0, 0, 0), (0, 0, 1), (1, 0, 0), (1, 1, 0)],  # chiral_shape_1
    #     # [(0, 0, 0), (0, 0, 1), (1, 0, 0), (1, -1, 0)],  # chiral_shape_2
    #     [(0, 0, 0), (1, 0, 0), (0, 1, 0), (1, 1, 0)],  # square
    #     [(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3)],  # line
    #     [(0, 0, 0), (0, 0, 1), (0, 1, 0), (1, 0, 0)],  # corner
    #     [(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 1, 0)],  # L
    #     [(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 1, 1)],  # T
    #     [(0, 0, 0), (1, 0, 0), (1, 1, 0), (2, 1, 0)],  # zigzag
    # ]

    pos = [
        # Line.
        [
            [-1.50, 0.00, 0.00],
            [-0.50, 0.00, 0.00],
            [0.50, 0.00, 0.00],
            [1.50, 0.00, 0.00],
        ],
        # Square.
        [
            [-0.50, -0.50, 0.00],
            [-0.50, 0.50, 0.00],
            [0.50, 0.50, 0.00],
            [0.50, -0.50, 0.00],
        ],
        # S/Z-shape.
        [
            [-1.00, 0.50, 0.00],
            [0.00, 0.50, 0.00],
            [0.00, -0.50, 0.00],
            [1.00, -0.50, 0.00],
        ],
        # L/J-shape.
        # [
        #     [-0.75, -0.75, 0.00],
        #     [-0.75, 0.25, 0.00],
        #     [0.25, 0.25, 0.00],
        #     [1.25, 0.25, 0.00],
        # ],
        # T-shape.
        [
            [-1.00, 0.25, 0.00],
            [0.00, 0.25, 0.00],
            [1.00, 0.25, 0.00],
            [0.00, -0.75, 0.00],
        ],
        # Corner.
        [
            [-0.75, 0.25, -0.25],
            [0.25, 0.25, -0.25],
            [0.25, -0.75, -0.25],
            [0.25, 0.25, 0.75],
        ],
        # Right screw.
        [
            [-0.50, 0.25, -0.25],
            [-0.50, 0.25, 0.75],
            [0.50, 0.25, -0.25],
            [0.50, -0.75, -0.25],
        ],
        # Left screw.
        [
            [-0.75, 0.50, -0.25],
            [0.25, -0.50, 0.75],
            [0.25, 0.50, -0.25],
            [0.25, -0.50, -0.25],
        ],
    ]
    pos = torch.tensor(pos, dtype=torch.get_default_dtype())

    # Since chiral shapes are the mirror of one another we need an *odd* scalar to distinguish them
    labels = torch.tensor(
        [
            [+1, 0, 0, 0, 0, 0, 0],  # chiral_shape_1
            # [-1, 0, 0, 0, 0, 0, 0],  # chiral_shape_2
            [0, 1, 0, 0, 0, 0, 0],  # square
            [0, 0, 1, 0, 0, 0, 0],  # line
            [0, 0, 0, 1, 0, 0, 0],  # corner
            [0, 0, 0, 0, 1, 0, 0],  # L
            [0, 0, 0, 0, 0, 1, 0],  # T
            [0, 0, 0, 0, 0, 0, 1],  # zigzag
        ],
        dtype=torch.get_default_dtype(),
    )

    return pos, labels
